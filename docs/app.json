[{"name": "app.py", "content": "from shiny import App, reactive, render, ui\nimport pandas as pd\nimport plotly.express as px\nfrom pathlib import Path\nimport seaborn as sns\n\n# Load dataset\ntips = sns.load_dataset(\"tips\")\n\n# ===== UI layout =====\napp_ui = ui.page_fluid(\n    ui.h2(\"\ud83d\udcb8 Restaurant Tips Dashboard\"),\n    \n    # Input: Select day of week\n    ui.input_select(\n        \"selected_day\", \n        \"Select Day of the Week:\", \n        choices=[\"All\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"], \n        selected=\"All\"\n    ),\n    \n    # Input: Show/hide smoker status\n    ui.input_checkbox(\"show_smoker\", \"Include Smoker Data\", True),\n    \n    # Output: Confirm input selection\n    ui.output_text_verbatim(\"info\"),\n\n    # Output: Chart\n    ui.output_image(\"chart\", height=\"400px\"),\n    \n    # Output: Table\n    ui.output_data_frame(\"table\") \n    \n)\n\n# ===== Server logic =====\ndef server(input, output, session):\n    \n    @reactive.calc\n    def filtered_data():\n        df = tips\n        \n        # Filter by day if not 'All'\n        if input.selected_day() != \"All\":\n            df = df[df[\"day\"] == input.selected_day()]\n        \n        # Filter by smoker status\n        if not input.show_smoker():\n            df = df[df[\"smoker\"] == \"No\"]\n        \n        return df\n\n    @output\n    @render.text\n    def info():\n        return f\"Showing data for day: {input.selected_day()}, Smoker included: {input.show_smoker()}\"\n\n    @output\n    @render.image\n    def chart():\n        df = filtered_data()\n        fig = px.scatter(\n            df,\n            x=\"total_bill\",\n            y=\"tip\",\n            color=\"sex\",\n            title=\"Tip vs Total Bill\"\n        )\n        img_path = \"chart.png\"\n        fig.write_image(img_path)\n        return {\n            \"src\": img_path,\n            \"alt\": \"Tip vs Total Bill\",\n            \"width\": \"auto\",\n            \"height\": \"400px\"\n        }\n\n    @output\n    @render.data_frame\n    def table():\n        return filtered_data()\n\n    \n\n# ===== App instance =====\napp = App(app_ui, server)", "type": "text"}]